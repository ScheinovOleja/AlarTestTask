import json

from flask import Blueprint, render_template, redirect, url_for
from flask import request
from flask_login import login_required, current_user
from werkzeug.security import generate_password_hash

from login_app import db
from login_app.forms import ChangeUserForm
from login_app.models import Role, MyUsers

main = Blueprint('main', __name__)


@main.route('/', methods=['GET'])
def index():
    """
    –†–µ–Ω–¥–µ—Ä –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ "–∑–∞–ª–æ–≥–∏–Ω–∏–≤—à–∏–º—Å—è" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    :return:
    """
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É "–ª–æ–≥–∏–Ω–∞"
    if not current_user.is_authenticated:
        return redirect(url_for('auth.login'))
    all_user = MyUsers.query.all()
    return render_template('index.html', all_users=all_user)


@main.route('/delete_user', methods=["POST"])
@login_required
def change_user_post_delete():
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –í—Ö–æ–¥ —á–µ—Ä–µ–∑ AJAX.
    :return:
    """
    # "–ó–∞—â–∏—Ç–∞" –æ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –∏–∑ postman –∏ –ø—Ä–æ—á–∏—Ö –≤–µ—â–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –º–æ–≥ —É–¥–∞–ª–∏—Ç—å –∫—Ç–æ —É–≥–æ–¥–Ω–æ.
    if current_user.roles[0].name == '–ê–¥–º–∏–Ω' or current_user.roles[0].name == '–†–µ–¥–∞–∫—Ç–æ—Ä':
        data = request.json
        user = MyUsers.query.get(int(data['id']))
        db.session.delete(user)
        db.session.commit()
        return json.dumps({'msg': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!'})
    else:
        return json.dumps({'msg': '–ê –∫—Ç–æ —ç—Ç–æ —Ç—É—Ç –ø—ã—Ç–∞–µ—Ç—Å—è —É –º–µ–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É–¥–∞–ª–∏—Ç—å, –∞?)))'})


@main.route('/change_user', methods=["POST"])
@login_required
def change_user_post_change():
    """
    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—Ö–æ–¥ –∏–∑ AJAX
    :return:
    """
    data = request.json
    user = MyUsers.query.get(int(data['id']))
    user.username = data['username']
    user.email = data['email']
    user.roles[0] = (Role.query.get(int(data['role'])))
    # –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è –¥–ª—è –∑–∞–º–µ–Ω—ã
    if data['cur_pass']:
        if data['pass1'] == data['pass2']:
            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω –≤–µ—Ä–Ω–æ, —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –Ω–∞ –Ω–æ–≤—ã–π
            if user.check_password(data['cur_pass']):
                user.password = generate_password_hash(data['pass1'])
            else:
                return json.dumps({'msg': '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å!'})
        else:
            return json.dumps({'msg': '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!'})
    db.session.add(user)
    db.session.commit()
    return json.dumps({'msg': '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã!'})


@main.route('/change_user/<int:pk>', methods=["GET"])
@login_required
def change_user_get_change(pk):
    """
    –†–µ–Ω–¥–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param pk:
    :return:
    """
    form = ChangeUserForm()
    user = MyUsers.query.get(int(pk))
    form.username.render_kw['value'] = user.username
    form.email.render_kw['value'] = user.email
    form.submit.render_kw['data-id'] = user.id
    all_roles = Role.query.all()
    # –Ø –≤–æ–æ–±—â–µ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –≤ Select –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç—É—Ç, –ø–æ—ç—Ç–æ–º—É –∫–æ–ª–µ—Å–æ –∏–∑ —Å–∞–ø–æ–≥ üòÉ
    try:
        form.role.choices = [(user.roles[0].id, user.roles[0])]
        for role in all_roles:
            if role.id != user.roles[0].id:
                form.role.choices.append((role.id, role))
    except IndexError:
        # –û–±–µ–∑–æ–ø–∞—Å–∏–ª –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Ä–æ–ª–∏(–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç
        # —Ä–æ–ª—å "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        form.role.choices = [('-', '-')]
        for role in all_roles:
            form.role.choices.append((role.id, role))
    return render_template('change_user.html', user=user, form=form)


@main.route('/change_role', methods=['GET'])
def get_roles():
    """
    –†–µ–Ω–¥–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö —Ä–æ–ª–µ–π. –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    :return:
    """
    all_roles = Role.query.all()
    if not current_user.is_superuser:
        return redirect(url_for('main.index'))
    return render_template('get_roles.html', roles=all_roles)
